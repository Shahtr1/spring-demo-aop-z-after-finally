NOTE: @After will execute before @AfterThrowing

@After works like finally, it does not have access to the exception

You may have noticed that in the latest versions of Spring, the @After Advice is running AFTER the @AfterThrowing advice.

There were recent changes in the Spring 5.2.7

- if advice methods defined in the same @Aspect class that need to run at the same join point
- the @After advice method is invoked AFTER any @AfterReturning or @AfterThrowing advice methods in the same aspect class

